# Generated by CMake 3.2.2

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget SofaBoundaryCondition SofaComponentGeneral SofaConstraint SofaEngine SofaExporter SofaGraphComponent SofaHaptics SofaPreconditioner SofaSparseSolver SofaTopologyMapping SofaUserInteraction SofaValidation SofaDenseSolver SofaOpenglVisual SofaEigen2Solver)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)

# Create imported target SofaBoundaryCondition
add_library(SofaBoundaryCondition SHARED IMPORTED)

set_target_properties(SofaBoundaryCondition PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaBaseTopology;SofaEigen2Solver"
)

# Create imported target SofaComponentGeneral
add_library(SofaComponentGeneral SHARED IMPORTED)

set_target_properties(SofaComponentGeneral PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaBoundaryCondition;SofaConstraint;SofaEngine;SofaExporter;SofaGraphComponent;SofaHaptics;SofaPreconditioner;SofaSparseSolver;SofaTopologyMapping;SofaUserInteraction;SofaValidation;SofaDenseSolver;SofaOpenglVisual;SofaEigen2Solver"
)

# Create imported target SofaConstraint
add_library(SofaConstraint SHARED IMPORTED)

set_target_properties(SofaConstraint PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaMeshCollision;SofaSimpleFem;SofaImplicitOdeSolver;SofaUserInteraction;SofaBaseLinearSolver;SofaEigen2Solver"
)

# Create imported target SofaEngine
add_library(SofaEngine SHARED IMPORTED)

set_target_properties(SofaEngine PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaMeshCollision"
)

# Create imported target SofaExporter
add_library(SofaExporter SHARED IMPORTED)

set_target_properties(SofaExporter PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaSimulationTree"
)

# Create imported target SofaGraphComponent
add_library(SofaGraphComponent SHARED IMPORTED)

set_target_properties(SofaGraphComponent PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaSimulationTree"
)

# Create imported target SofaHaptics
add_library(SofaHaptics SHARED IMPORTED)

set_target_properties(SofaHaptics PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaConstraint"
)

# Create imported target SofaPreconditioner
add_library(SofaPreconditioner SHARED IMPORTED)

set_target_properties(SofaPreconditioner PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaImplicitOdeSolver;SofaSimpleFem;SofaBaseLinearSolver;SofaSparseSolver;SofaDenseSolver"
)

# Create imported target SofaSparseSolver
add_library(SofaSparseSolver SHARED IMPORTED)

set_target_properties(SofaSparseSolver PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaBaseLinearSolver;SofaImplicitOdeSolver;SofaSimpleFem;csparse"
)

# Create imported target SofaTopologyMapping
add_library(SofaTopologyMapping SHARED IMPORTED)

set_target_properties(SofaTopologyMapping PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaBaseTopology"
)

# Create imported target SofaUserInteraction
add_library(SofaUserInteraction SHARED IMPORTED)

set_target_properties(SofaUserInteraction PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaMeshCollision;SofaTopologyMapping;SofaDeformable;SofaBoundaryCondition;SofaGraphComponent;SofaBaseVisual"
)

# Create imported target SofaValidation
add_library(SofaValidation SHARED IMPORTED)

set_target_properties(SofaValidation PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaBaseCollision;SofaLoader;SofaMeshCollision"
)

# Create imported target SofaDenseSolver
add_library(SofaDenseSolver SHARED IMPORTED)

set_target_properties(SofaDenseSolver PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaBaseLinearSolver;newmat"
)

# Create imported target SofaOpenglVisual
add_library(SofaOpenglVisual SHARED IMPORTED)

set_target_properties(SofaOpenglVisual PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaBaseVisual;SofaSimulationCommon"
)

# Create imported target SofaEigen2Solver
add_library(SofaEigen2Solver SHARED IMPORTED)

set_target_properties(SofaEigen2Solver PROPERTIES
  INTERFACE_LINK_LIBRARIES "SofaBaseLinearSolver"
)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/SofaGeneralTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# Make sure the targets which have been exported in some other 
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "SofaBaseTopology" "SofaMeshCollision" "SofaSimpleFem" "SofaImplicitOdeSolver" "SofaBaseLinearSolver" "SofaSimulationTree" "csparse" "SofaDeformable" "SofaBaseVisual" "SofaBaseCollision" "SofaLoader" "newmat" "SofaSimulationCommon" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
